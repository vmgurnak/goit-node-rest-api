{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    }
  ],
  "tags": [
    {
      "name": "Сontacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Users",
      "description": "User operations."
    }
  ],
  "paths": {
    "/api/contacts": {
      "get": {
        "tags": [
          "Сontacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Bearer <token>",
            "description": "The token issued to the current user."
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contacts successfully found"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "tags": [
          "Сontacts"
        ],
        "summary": "Get contacts by id",
        "operationId": "getOneContact",
        "description": "Get contacts by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Bearer <token>",
            "description": "The token issued to the current user."
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "66630fa6bef3d5faca0e3c28",
            "description": "The id of the contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contacts successfully found"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "phone",
          "favorite",
          "owner",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "Contact record id",
            "type": "string",
            "example": "66630fa6bef3d5faca0e3c28"
          },
          "name": {
            "description": "Wylie Pope",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "Email of the contact",
            "type": "string",
            "example": "est@utquamvel.net"
          },
          "phone": {
            "description": "Phone number of the contact",
            "type": "string",
            "example": "(692) 802-2949"
          },
          "favorite": {
            "description": "Is the contact favorite",
            "type": "boolean",
            "example": true
          },
          "owner": {
            "description": "User id",
            "type": "string",
            "example": "666eb56953879d650c290156"
          },
          "createdAt": {
            "description": "Contact creation date",
            "type": "string",
            "format": "date-time",
            "example": "2024-06-07T13:48:22.793Z"
          },
          "updatedAt": {
            "description": "Contact update date",
            "type": "string",
            "format": "date-time",
            "example": "2024-06-10T08:43:41.606Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "ID is not valid!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "ID 66630fa6bef3d5faca0e3c2 is not valid"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "ID is not found!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "ID 66630fa6bef3d5faca0e3c27 is not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}